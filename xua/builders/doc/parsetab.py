
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = '2_DASHES CHAR CLOSE CLOSE_QUOTE CONTEXT DOUBLE_BACKTICK ESCAPED_CHAR HEADING_INDICATOR LIST_NUM NEW_LINE OPEN OPEN_QUOTE PLUS_2_EQUALS PLUS_2_SPACES_END PLUS_3_ASTERISK PLUS_3_DASHES PLUS_3_UNDERSCORE PYTHON_COMMAND SIGN_ASTERISK SIGN_CLOSE_BRACKET SIGN_CLOSE_PARENTHESIS SIGN_COLON SIGN_DASH SIGN_DOUBLE_QUOTATION SIGN_EQUAL SIGN_EXCLAMATION SIGN_GREATER SIGN_LESS SIGN_OPEN_BRACKET SIGN_OPEN_PARENTHESIS SIGN_PIPE SIGN_PLUS SIGN_SINGLE_QUOTATION SIGN_UNDERSCORE SINGLE_BACKTICK TRIPLE_BACKTICK WHITE_SPACESdocument : document element\n                | elementelement : command\n               | heading\n               | paragraphcommand : command PYTHON_COMMAND\n               | PYTHON_COMMANDheading : HEADING_INDICATOR textheading : text NEW_LINE PLUS_2_EQUALSheading : text NEW_LINE 2_DASHES\n               | text NEW_LINE PLUS_3_DASHESparagraph : paragraph text\n                 | paragraph NEW_LINE text\n                 | texttext : text text_char\n            | text_chartext_char : ESCAPED_CHAR\n                 | CHAR'
    
_lr_action_items = {'PYTHON_COMMAND':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,16,18,19,20,21,22,],[6,6,-2,13,-4,-5,-7,-14,-16,-17,-18,-1,-6,-12,-8,-15,-13,-9,-10,-11,]),'HEADING_INDICATOR':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,16,18,19,20,21,22,],[7,7,-2,-3,-4,-5,-7,-14,-16,-17,-18,-1,-6,-12,-8,-15,-13,-9,-10,-11,]),'ESCAPED_CHAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,],[10,10,-2,-3,-4,10,-7,10,10,-16,-17,-18,-1,-6,10,10,10,-15,10,-9,-10,-11,]),'CHAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,],[11,11,-2,-3,-4,11,-7,11,11,-16,-17,-18,-1,-6,11,11,11,-15,11,-9,-10,-11,]),'$end':([1,2,3,4,5,6,8,9,10,11,12,13,14,16,18,19,20,21,22,],[0,-2,-3,-4,-5,-7,-14,-16,-17,-18,-1,-6,-12,-8,-15,-13,-9,-10,-11,]),'NEW_LINE':([5,8,9,10,11,14,18,19,],[15,17,-16,-17,-18,-12,-15,-13,]),'PLUS_2_EQUALS':([17,],[20,]),'2_DASHES':([17,],[21,]),'PLUS_3_DASHES':([17,],[22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'document':([0,],[1,]),'element':([0,1,],[2,12,]),'command':([0,1,],[3,3,]),'heading':([0,1,],[4,4,]),'paragraph':([0,1,],[5,5,]),'text':([0,1,5,7,15,],[8,8,14,16,19,]),'text_char':([0,1,5,7,8,14,15,16,19,],[9,9,9,9,18,18,9,18,18,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> document","S'",1,None,None,None),
  ('document -> document element','document',2,'p_document','yacc.py',9),
  ('document -> element','document',1,'p_document','yacc.py',10),
  ('element -> command','element',1,'p_element','yacc.py',18),
  ('element -> heading','element',1,'p_element','yacc.py',19),
  ('element -> paragraph','element',1,'p_element','yacc.py',20),
  ('command -> command PYTHON_COMMAND','command',2,'p_command','yacc.py',24),
  ('command -> PYTHON_COMMAND','command',1,'p_command','yacc.py',25),
  ('heading -> HEADING_INDICATOR text','heading',2,'p_heading','yacc.py',33),
  ('heading -> text NEW_LINE PLUS_2_EQUALS','heading',3,'p_heading_spec_1','yacc.py',42),
  ('heading -> text NEW_LINE 2_DASHES','heading',3,'p_heading_spec_2','yacc.py',51),
  ('heading -> text NEW_LINE PLUS_3_DASHES','heading',3,'p_heading_spec_2','yacc.py',52),
  ('paragraph -> paragraph text','paragraph',2,'p_paragraph','yacc.py',61),
  ('paragraph -> paragraph NEW_LINE text','paragraph',3,'p_paragraph','yacc.py',62),
  ('paragraph -> text','paragraph',1,'p_paragraph','yacc.py',63),
  ('text -> text text_char','text',2,'p_text','yacc.py',67),
  ('text -> text_char','text',1,'p_text','yacc.py',68),
  ('text_char -> ESCAPED_CHAR','text_char',1,'p_text_char','yacc.py',76),
  ('text_char -> CHAR','text_char',1,'p_text_char','yacc.py',77),
]
